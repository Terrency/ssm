<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!--
    <context:annotation-config />用于激活在Spring容器中注册过的Bean上面的注解
    (激活注解但不能注册Bean{@Autowired|@Required|@PersistenceContext})
    <context:component-scan />除了具有<context:annotation-config />的功能以外还可以在指定package下注册JavaBean
    (激活注解同时还能注册Bean{@Controller|@Service|@Repository|@Component})
    -->
    <context:component-scan base-package="com.ssm.*.web"/>

    <import resource="classpath:spring-cache.xml"/>

    <bean id="smsCaptchaService" class="com.ssm.common.web.captcha.SmsCaptchaServiceImpl">
        <property name="cacheService" ref="cacheService"/>
        <property name="imgCaptchaService" ref="imgCaptchaService"/>
    </bean>

    <bean id="imgCaptchaService" class="com.ssm.common.web.captcha.ImgCaptchaServiceImpl">
        <property name="cacheService" ref="cacheService"/>
        <property name="captchaProducer" ref="captchaProducer"/>
    </bean>

    <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
        <property name="config">
            <bean class="com.google.code.kaptcha.util.Config">
                <constructor-arg type="java.util.Properties">
                    <props>
                        <prop key="kaptcha.textproducer.font.color">red</prop>
                        <prop key="kaptcha.textproducer.font.size">36</prop>
                        <prop key="kaptcha.textproducer.char.space">4</prop>
                        <prop key="kaptcha.word.impl">com.ssm.common.web.captcha.WordRendererExt</prop>
                        <prop key="kaptcha.obscurificator.impl">com.ssm.common.web.captcha.DefaultRipple</prop>
                    </props>
                </constructor-arg>
            </bean>
        </property>
    </bean>

    <!-- Hessian RPC -->
    <bean id="hessianProxyFactoryBean" class="org.springframework.remoting.caucho.HessianProxyFactoryBean"
          abstract="true">
        <property name="overloadEnabled" value="true"/>
        <property name="allowNonSerializable" value="true"/>
    </bean>

</beans>

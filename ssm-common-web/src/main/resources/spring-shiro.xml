<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--配置与web.xml中对应的Filter的bean-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/security/login"/>
        <!--
            注意：当配置了Shiro权限注解后, 下面的配置将不起作用, 即当用户访问没有被授权的资源时将不会跳转到指定的路径
            而是在页面显示org.apache.shiro.authz.UnauthorizedException异常信息.
            解决方案：@see com.ssm.common.web.base.ExceptionHandler
        -->
        <property name="unauthorizedUrl" value="/error/authzRefuse.jsp"/>
        <property name="filters">
            <map>
                <entry key="authc" value-ref="simpleFormAuthenticationFilter"/>
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                <!--静态资源的匿名访问-->
                /favicon.ico=anon
                /assets/**=anon
                /error/**=anon
                /captcha/**=anon
                <!--/security/logout对应的Java类可以不存在-->
                /security/logout=logout
                <!--配置记住我或认证通过可以访问的地址-->
                /portal/**=user
                /**=authc
            </value>
        </property>
    </bean>

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- Single realm app. If you have multiple realms, use the 'realms' property instead. -->
        <property name="realm" ref="simpleAuthorizingRealm"/>
        <property name="cacheManager" ref="cacheManager"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
        <!--
            By default the servlet container sessions will be used.
            Uncomment this line to use shiro's native sessions.
        -->
        <!-- <property name="sessionMode" value="native"/> -->
    </bean>

    <!-- Define the realm you want to use to connect to your back-end security datasource. -->
    <bean id="simpleAuthorizingRealm" class="com.ssm.common.web.security.SimpleAuthorizingRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>

    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
    </bean>

    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml"/>
    </bean>

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager"/>

    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cookie" ref="cookie"/>
    </bean>

    <bean id="cookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
    </bean>

    <bean id="simpleFormAuthenticationFilter" class="com.ssm.common.web.security.SimpleFormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="captchaParam" value="captcha"/>
        <property name="rememberMeParam" value="rememberMe"/>
    </bean>

    <!-- ============================== Enabling Shiro Annotations ============================== -->

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!--
    Spring AOP uses either JDK dynamic proxies or CGLIB to create the proxy.
    To force the use of CGLIB proxies set the value of the proxy-target-class attribute of the <aop:config> element to true.
    To force CGLIB proxying when using the @AspectJ autoproxy support, set the proxy-target-class attribute of the <aop:aspectj-autoproxy> element to true.
    -->
    <!--<aop:config proxy-target-class="true"/>-->

    <!--
    Spring AOP的三种配置方式: (1)<aop:config/> (2)<aop:aspectj-autoproxy/> (3)DefaultAdvisorAutoProxyCreator
    注意: 推荐使用前两种方式, Shiro和SpringMVC整合需要在SpringMVC配置文件中添加<aop:config/>配置才能使Shiro权限注解有效.
    -->
    <!--
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    -->

</beans>
